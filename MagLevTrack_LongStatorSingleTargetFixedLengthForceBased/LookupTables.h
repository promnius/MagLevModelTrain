
#ifndef LookupTables_h
#define LookupTables_h

#include "Arduino.h"

// CALIBRATION TABLES
long intSensorCalibrationScalar[40] = {98,107,96,90,103,106,95,102,101,98,97,100,104,97,97,105,99,103,96,105,95,100,112,95,92,113,105,95,97,101,103,103,94,92,96,103,100,100,98,106};
long intSensorCalibrationOffset[40] = {4264,3386,2955,3249,3149,3251,4284,1969,3506,3241,3927,3914,3394,3109,3241,3868,2755,3982,3742,3211,4026,2730,3804,2986,3164,3484,4262,3458,3165,3526,2761,3519,2775,3710,4235,3809,3665,2293,4257,2285};

// LOOKUP TABLE FLUX TO HEIGHT
int CTFluxHeightLength = 23;
// {flux,height} in uT,uI. flux stricktly increasing, first entry must includ flux = min (0), last must include flux = max
const long PROGMEM CTFLuxHeightuTuI[][2] = {
    {0,1000000},
    {2785,1000000},
    {3223,950000},
    {3683,900000},
    {4197,850000},
    {4878,800000},
    {5665,750000},
    {6583,700000},
    {7783,650000},
    {9185,600000},
    {10937,550000},
    {13182,500000},
    {15894,450000},
    {19292,400000},
    {23550,350000},
    {28835,300000},
    {35142,250000},
    {42605,200000},
    {50664,150000},
    {58548,100000},
    {64546,50000},
    {67250,0},
    {200000,0}};

long maxForce_uN = 1500000;
long minForce_uN = 0;
// LOOKUP TABLE HEIGHT AND TARGET FORCE TO CURRENT
const int CTHeightForceCurrentLengthDimHeight = 9;
const int CTHeightForceCurrentLengthDimForce = 7;
// [heightIndex][forceIndex][parameterYouWant] = {height,force,current} in uI,uN,uA. Height,Force stricktly increasing, first entry must include Height,Force = min (0,-1000000?), last must include Height,Force = max (400000, 2000000)
long CTHeightForceCurrent_uIuNuA[CTHeightForceCurrentLengthDimHeight][CTHeightForceCurrentLengthDimForce][3] = 
{
  {
    {0,min((minForce_uN-1),2534368),1500000},
    {0,2534368,1500000},
    {0,2970538,750000},
    {0,3409727,0},
    {0,3854625,-750000},
    {0,4305382,-1500000},
    {0,max((maxForce_uN+1),4305382),-1500000}
  },{
    {50000,min((minForce_uN-1),1067722),1500000},
    {50000,1067722,1500000},
    {50000,1392712,750000},
    {50000,1708978,0},
    {50000,2022460,-750000},
    {50000,2336482,-1500000},
    {50000,max((maxForce_uN+1),2336482),-1500000}
  },{
    {100000,min((minForce_uN-1),492544),1500000},
    {100000,492544,1500000},
    {100000,746701,750000},
    {100000,1002671,0},
    {100000,1258388,-750000},
    {100000,1511372,-1500000},
    {100000,max((maxForce_uN+1),1511372),-1500000}
  },{
    {150000,min((minForce_uN-1),217283),1500000},
    {150000,217283,1500000},
    {150000,411515,750000},
    {150000,609766,0},
    {150000,812029,-750000},
    {150000,1016427,-1500000},
    {150000,max((maxForce_uN+1),1016427),-1500000}
  },{
    {200000,min((minForce_uN-1),81632),1500000},
    {200000,81632,1500000},
    {200000,234909,750000},
    {200000,391110,0},
    {200000,550718,-750000},
    {200000,712892,-1500000},
    {200000,max((maxForce_uN+1),712892),-1500000}
  },{
    {250000,min((minForce_uN-1),4009),1500000},
    {250000,4009,1500000},
    {250000,127206,750000},
    {250000,252521,0},
    {250000,380506,-750000},
    {250000,510442,-1500000},
    {250000,max((maxForce_uN+1),510442),-1500000}
  },{
    {300000,min((minForce_uN-1),-31004),1500000},
    {300000,-31004,1500000},
    {300000,69911,750000},
    {300000,172303,0},
    {300000,276719,-750000},
    {300000,382558,-1500000},
    {300000,max((maxForce_uN+1),382558),-1500000}
  },{
    {350000,min((minForce_uN-1),-48467),1500000},
    {350000,-48467,1500000},
    {350000,35038,750000},
    {350000,119584,0},
    {350000,205666,-750000},
    {350000,292766,-1500000},
    {350000,max((maxForce_uN+1),292766),-1500000}
  },{
    {400000,min((minForce_uN-1),-61290),1500000},
    {400000,-61290,1500000},
    {400000,8375,750000},
    {400000,78769,0},
    {400000,150335,-750000},
    {400000,222622,-1500000},
    {400000,max((maxForce_uN+1),222622),-1500000}
  }
};


const uint8_t PROGMEM gamma8[] = {
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
    2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,
    5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10,
   10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 16, 16,
   17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24, 24, 25,
   25, 26, 27, 27, 28, 29, 29, 30, 31, 32, 32, 33, 34, 35, 35, 36,
   37, 38, 39, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50,
   51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68,
   69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89,
   90, 92, 93, 95, 96, 98, 99,101,102,104,105,107,109,110,112,114,
  115,117,119,120,122,124,126,127,129,131,133,135,137,138,140,142,
  144,146,148,150,152,154,156,158,160,162,164,167,169,171,173,175,
  177,180,182,184,186,189,191,193,196,198,200,203,205,208,210,213,
  215,218,220,223,225,228,231,233,236,239,241,244,247,249,252,255 };
  
#endif
